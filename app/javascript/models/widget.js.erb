const sizes = <%= Widget::SIZES %>;
const thickness = <%= Widget::THICKNESS %>;
const colors = <%= Widget::COLORS.reverse %>;

const widget_price_cents = <%= Widget::PRICE_CENTS %>;

class Widget {
  constructor(attrs) {
    this.color = attrs.color
    this.thickness = attrs.thickness
    this.size = attrs.size
    this.key = this.getSemanticKey()
    this.quantity = attrs.quantity || 1;
  }

  getName() {
    return `${this.color} / ${this.thickness} / ${this.size}`
  }

  getSemanticKey() {
    return `${this.color}-${this.thickness}-${this.size}`;
  }

  incrementQuantity() {
    this.quantity += 1
  }

  decrementQuantity() {
    this.quantity -= 1
  }

  // is this widget equal to another?
  eq(widget) {
    return this.key === widget.key
  }

  toJSON() {
    return {
      size: this.size,
      color: this.color,
      thickness: this.thickness,
      quantity: this.quantity
    };
  }

  // min # of attrs we need to give react the state it wants
  toStatefulJSON() {
    return {
      quantity: this.quantity,
      key: this.key
    }
  }

  total() {
    return widget_price_cents * this.quantity;
  }

  static getSizes() { return sizes; }
  static getThickness() { return thickness; }
  static getColors() { return colors; }
  static getBasePriceCents() { return widget_price_cents; }
}

export default Widget;
